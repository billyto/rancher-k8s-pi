#cloud-config

# This is the user-data configuration file for cloud-init. By default this sets
# up an initial user called "ubuntu" with password "ubuntu", which must be
# changed at first login. However, many additional actions can be initiated on
# first boot from this file. The cloud-init documentation has more details:
#
# https://cloudinit.readthedocs.io/
#
# Some additional examples are provided in comments below the default
# configuration.
# On first boot, set the (default) ubuntu user's password to "ubuntu" and
# expire user passwords
chpasswd:
  expire: true
  list:
  - ubuntu:ubuntu

# Enable password authentication with the SSH daemon
ssh_pwauth: true
## Add users and groups to the system, and import keys with the ssh-import-id
## utility
groups:
- ghost: [ghost]
- docker: [docker]
users:
- default
- name: ghost
  gecos: Ghost Hacker
  primary_group: ghost
  shell: /bin/bash
  sudo: ALL=(ALL) NOPASSWD:ALL
  groups: adm, dialout, cdrom, floppy, sudo, audio, dip, video, plugdev, netdev, lxd, docker, cgroups
  chpasswd: {expire: False}
  lock_passwd: false
  passwd: $6$rounds=4096$Tj2bfmwZ$rEeoOhqFl.M5YcRy9Nmv/9yTseWg9z2Jk/MqnohwA0X8wQV94bq6kiyqtb9YEzARfJdlTugOWZ6/De6GTXkQX1
  ssh_import_id: None
  ssh_pwauth: true
  ssh_authorized_keys:
    - ecdsa-sha2-nistp521 AAAAE2VjZHNhLXNoYTItbmlzdHA1MjEAAAAIbmlzdHA1MjEAAACFBACSaRcs+6jENkmHMCyq6WpRcwVGAr6rCWKy+nT6qxq9XgARlVzzuERnY3JKw97v0Z79ti6Vhjq9jIoA3T8jY73UqgDUttiCTsohJEnu6mwW3Ref3C9TbVauPCJjsG91vFse1r7LzN69Wf5v3225PvRGa6XFrOJgI/bErpmqDz0ydaGM4g== cbittner@Chads-MacBook-Air.local
    - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIK30903pOfXp0LF6SbzfeLqwLPQbXnE55XtQ7DS3fNrr cbittner@Chads-MacBook-Air.local
    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDdJu6sQ4GNjetAlTveIkjfE4rRYzDvQab3/omXV9iGaavMFsAx2kma7PoEH7UJMH/Y4CmlbD339TBE0DZkLcXdTho/p1eNxoZ6P2ZOXqg/QIHiHJGaPm4ssBvffEASnmVcWrt9E+zL46M4CvkJoKHB2aTVpWSztC8vNEodoGgoHcuVfOavKVngbkkA7lf8wsNZf7e7P0mIKyRtnfBULRO3SpPmreSzJ+cU6fksRgu2iUEMrthC8pY2SwAccPKLranksgS0CGzWfGDluNbH6CNnIs4neccsqUOlvQFCGzk3eq9DKK3pmaUugdIDAZLSbNT+xs64l5yetepRe2BSnt6/ cbittner@Chads-MacBook-Air.local
    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDFqmZgik19YsFlzVovj24O3AgJEG5hWVNlO89LqTIzGZDrHdEvXtgSE1NZjqzqBXLRIBxm/HLXfytyjXgiG0bqj4SgIs/GDvnNBLbqDMAyNoo+H1adts8H8Hph3UasJw7VsUeRxVEOPosp0s4kSgjlZ7ON52qDgHOrORS/+K8gbRmv+R2oBOyzWXqiwar4sK07lJL53BnQoPcmmwcHYCIYUy4KGcmabuzWN/qVLnPebaP6j+YpIEca2vZBUHoZ9f/4AmoimErmnPRTe5oKCmEfri2Ptf8dAB0pLWrCbr4xjbCrTiBSECSQxo1ZTnAhZ81rQBQ73M8tZafJ2otkE37VDZLyQhSx5bHcRVvatMHxgBxBnUExzV+E9kFrdVzkl6frRa5xCvvLzhvaDCWJXMlYSF3G/q/N/tNcAWyJgvCaVcbawJjXNKhE9bHJXkXxY7Exa/hQ/6r0Eg0UQ0yWYqrSm3d66/PzpN9n4L03Yhf9a5YEN8NoCx/iG2tR+qW+LyFScM3oOnt8tl8m31Z7CRJE2RsxTHun7bhhiLRyowzoxt/bgP8YXgOQO42F2V60exvgBU1uqFpp75xolnsDfuOBcdZdI/7PG8/bfD/V2myQfLqSgdPTb57P5bMOen3P2QQ21EZaRl2uh17Q5UOETU1tduKvPvdkUQsw9LX7GNMCeQ== chad.bittner@merrillcorp.com
    - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAnM0jg7crgv9VsRcwJfqkz9HjdAKOGvgb+5cTQDSZld chad.bittner@merrillcorp.com

apt:
  preserve_sources_list: true
  sources:
    k8s.list:
      source: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
      keyid: FEEA9169307EA071
      filename: k8s.list
    cri-o.list:
      source: "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.20/xUbuntu_20.04/ /"
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----
        mQENBFtkV0cBCADStSTCG5qgYtzmWfymHZqxxhfwfS6fdHJcbGUeXsI5dxjeCWhs
        XarZm6rWZOd5WfSmpXhbKOyM6Ll+6bpSl5ICHLa6fcpizYWEPa8fpg9EGl0cF12G
        GgVLnnOZ6NIbsoW0LHt2YN0jn8xKVwyPp7KLHB2paZh+KuURERG406GXY/DgCxUx
        Ffgdelym/gfmt3DSq6GAQRRGHyucMvPYm53r+jVcKsf2Bp6E1XAfqBrD5r0maaCU
        Wvd7bi0B2Q0hIX0rfDCBpl4rFqvyaMPgn+Bkl6IW37zCkWIXqf1E5eDm/XzP881s
        +yAvi+JfDwt7AE+Hd2dSf273o3WUdYJGRwyZABEBAAG0OGRldmVsOmt1YmljIE9C
        UyBQcm9qZWN0IDxkZXZlbDprdWJpY0BidWlsZC5vcGVuc3VzZS5vcmc+iQE+BBMB
        CAAoBQJfcJJOAhsDBQkIKusHBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRBN
        ZDkDdQYKpB0xCACmtCT6ruPiQa4l0DEptZ+u3NNbZfSVGH4fE4hyTjLbzrCxqcoh
        xJvDKxspuJ85wWFWMtl57+lFFE1KP0AX2XTT+/v2vN1PIfwgOSw3yp2sgWuIXFAi
        89YSjSh8G0SGAH90A9YFMnTbllzGoGURjSX03iasW3A408ljbDehA6rpS3t3FD7P
        PnUF6204orYu00Qvc54an/xVJzxupb69MKW5EeK7x8MJnIToT8hIdOdGVD6axsis
        x+1U71oMK1gBke7p4QPUdhJFpSUd6kT8bcO+7rYouoljFNYkUfwnqtUn7525fkfg
        uDqqXvOJMpJ/sK1ajHOeehp5T4Q45L/qUCb3iEYEExECAAYFAltkV0cACgkQOzAR
        t2udZSOoswCdF44NTN09DwhPFbNYhEMb9juP5ykAn0bcELvuKmgDwEwZMrPQkG8t
        Pu9n
        =42uC
        -----END PGP PUBLIC KEY BLOCK-----
      filename: cri-o.list
    libcontainer.list:
      source: "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /"
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----
        mQENBFtkV0cBCADStSTCG5qgYtzmWfymHZqxxhfwfS6fdHJcbGUeXsI5dxjeCWhs
        XarZm6rWZOd5WfSmpXhbKOyM6Ll+6bpSl5ICHLa6fcpizYWEPa8fpg9EGl0cF12G
        GgVLnnOZ6NIbsoW0LHt2YN0jn8xKVwyPp7KLHB2paZh+KuURERG406GXY/DgCxUx
        Ffgdelym/gfmt3DSq6GAQRRGHyucMvPYm53r+jVcKsf2Bp6E1XAfqBrD5r0maaCU
        Wvd7bi0B2Q0hIX0rfDCBpl4rFqvyaMPgn+Bkl6IW37zCkWIXqf1E5eDm/XzP881s
        +yAvi+JfDwt7AE+Hd2dSf273o3WUdYJGRwyZABEBAAG0OGRldmVsOmt1YmljIE9C
        UyBQcm9qZWN0IDxkZXZlbDprdWJpY0BidWlsZC5vcGVuc3VzZS5vcmc+iQE+BBMB
        CAAoBQJfcJJOAhsDBQkIKusHBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRBN
        ZDkDdQYKpB0xCACmtCT6ruPiQa4l0DEptZ+u3NNbZfSVGH4fE4hyTjLbzrCxqcoh
        xJvDKxspuJ85wWFWMtl57+lFFE1KP0AX2XTT+/v2vN1PIfwgOSw3yp2sgWuIXFAi
        89YSjSh8G0SGAH90A9YFMnTbllzGoGURjSX03iasW3A408ljbDehA6rpS3t3FD7P
        PnUF6204orYu00Qvc54an/xVJzxupb69MKW5EeK7x8MJnIToT8hIdOdGVD6axsis
        x+1U71oMK1gBke7p4QPUdhJFpSUd6kT8bcO+7rYouoljFNYkUfwnqtUn7525fkfg
        uDqqXvOJMpJ/sK1ajHOeehp5T4Q45L/qUCb3iEYEExECAAYFAltkV0cACgkQOzAR
        t2udZSOoswCdF44NTN09DwhPFbNYhEMb9juP5ykAn0bcELvuKmgDwEwZMrPQkG8t
        Pu9n
        =42uC
        -----END PGP PUBLIC KEY BLOCK-----
      filename: libcontainer.list    
    # docker.list:
    #   source: "deb [arch=arm64] https://download.docker.com/linux/ubuntu focal stable"
    #   keyid: 0EBFCD88
    #   filename: docker.list

## Write arbitrary files to the file-system (including binaries!)
write_files:
  - path: /etc/docker/daemon.json
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }
    permissions: '0644'
    owner: root:root
  - path: /etc/sysctl.d/99-kubernetes-cri.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
    permissions: '0644'
    owner: root:root
  - path: /etc/modules-load.d/k8s.conf
    content: |
      br_netfilter
    permissions: '0644'
    owner: root:root
  - encoding: base64
    content: MTI3LjAuMC4xIGxvY2FsaG9zdAoKIyBUaGUgZm9sbG93aW5nIGxpbmVzIGFyZSBkZXNpcmFibGUgZm9yIElQdjYgY2FwYWJsZSBob3N0cwo6OjEgaXA2LWxvY2FsaG9zdCBpcDYtbG9vcGJhY2sKZmUwMDo6MCBpcDYtbG9jYWxuZXQKZmYwMDo6MCBpcDYtbWNhc3RwcmVmaXgKZmYwMjo6MSBpcDYtYWxsbm9kZXMKZmYwMjo6MiBpcDYtYWxscm91dGVycwpmZjAyOjozIGlwNi1hbGxob3N0cwoKMTkyLjE2OC4xLjEwNyBrOHMtbWFzdGVyCjE5Mi4xNjguMS4xMDggazhzLXdvcmtlci0wMQoxOTIuMTY4LjEuMTA5IGs4cy13b3JrZXItMDIKMTkyLjE2OC4xLjExMCBrOHMtd29ya2VyLTAzCjE5Mi4xNjguMS4xMTEgazhzLXdvcmtlci0wNAo=
    owner: root:root
    path: /etc/hosts
    permissions: '0644'
  - encoding: base64
    content: IyEvYmluL2Jhc2gKCnN1ZG8gYXB0LW1hcmsgaG9sZCBjcmktbyBrdWJlbGV0IGt1YmVhZG0ga3ViZWN0bA==
    owner: root:root
    path: /var/lib/cloud/scripts/per-once/01-post-setup.sh
    permissions: '0644'
  - path: /root/init.yaml
    content: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      cgroupDriver: systemd
      ---
      apiVersion: kubeadm.k8s.io/v1beta2
      kind: ClusterConfiguration
      clusterName: rpi-k8s
      networking:
        podSubnet: "10.244.0.0/16"
        serviceSubnet: "10.96.0.0/12"
    permissions: '0644'
    owner: ghost:ghost

## Update apt database and upgrade packages on first boot
package_update: true
package_upgrade: true
# Install additional packages on first boot
#
# Default: none
#
# if packages are specified, this apt_update will be set to true
#
# packages may be supplied as a single package name or as a list
# with the format [<package>, <version>] wherein the specifc
# package version will be installed.
 
## Install additional packages on first boot
packages:
  - buildah
  - conmon
  - containers-common
  - cri-o
  - cri-o-runc
  - curl
  - iotop
  - jq
  - [kubelet, 1.20.6-00]
  - [kubeadm, 1.20.6-00]
  - [kubectl, 1.20.6-00]
  - mlocate
  - net-tools
  - nfs-common
  - keyutils
  - libnfsidmap2
  - rpcbind
  - watchdog
  - python3
  - python3-dev
  - python3-pip
  - python3-setuptools
  - rsync
  - software-properties-common
  - sudo
  - tzdata
  - vim
  - wget


## Run arbitrary commands at rc.local like time
runcmd:
#- [ ls, -l, / ]
#- [ sh, -xc, "echo $(date) ': hello world!'" ]
#- [ wget, "http://ubuntu.com", -O, /run/mydir/index.html ]
  - [ sudo, sed, -i, '$ s/$/ cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1/', /boot/firmware/cmdline.txt ]
  - [ sudo, sed, -i, 's/runtime_path = ".*"/runtime_path = ""/', /etc/crio/crio.conf ]
  - [ sudo, mkdir, -p, /usr/lib/cri-o-runc/sbin ]
  - [ sudo, ln, -s,  /usr/sbin/runc, /usr/lib/cri-o-runc/sbin/runc ]
  - [ sudo, systemctl, start, crio ]
  - [ sudo, systemctl, enable, crio ] 
  - [ sudo, kubeadm, config, images, pull ]
  - [ sudo, chmod, 0755, /var/lib/cloud/scripts/per-once/01-post-setup.sh]
  
## poweroff or reboot system after finished
# default: none
#
# power_state can be used to make the system shutdown, reboot or
# halt after boot is finished.  This same thing can be acheived by
# user-data scripts or by runcmd by simply invoking 'shutdown'.
# 
# Doing it this way ensures that cloud-init is entirely finished with
# modules that would be executed, and avoids any error/log messages
# that may go to the console as a result of system services like
# syslog being taken down while cloud-init is running.
#
# If you delay '+5' (5 minutes) and have a timeout of
# 120 (2 minutes), then the max time until shutdown will be 7 minutes.
# cloud-init will invoke 'shutdown +5' after the process finishes, or
# when 'timeout' seconds have elapsed.
#
# delay: form accepted by shutdown.  default is 'now'. other format
#        accepted is '+m' (m in minutes)
# mode: required. must be one of 'poweroff', 'halt', 'reboot'
# message: provided as the message argument to 'shutdown'. default is none.
# timeout: the amount of time to give the cloud-init process to finish
#          before executing shutdown.
# condition: apply state change only if condition is met.
#            May be boolean True (always met), or False (never met),
#            or a command string or list to be executed.
#            command's exit code indicates:
#               0: condition met
#               1: condition not met
#            other exit codes will result in 'not met', but are reserved
#            for future use.
#

power_state:
  delay: "+2"
  mode: reboot
  message: Bye Bye
  timeout: 30
  condition: True

# final_message
# default: cloud-init boot finished at $TIMESTAMP. Up $UPTIME seconds
# this message is written by cloud-final when the system is finished
# its first boot
final_message: "The system is finally up, after $UPTIME seconds"
